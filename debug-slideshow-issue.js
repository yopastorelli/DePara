/**
 * Script de debug para o slideshow
 * Autor: yopastorelli
 * Vers√£o: 1.0.0
 */

console.log('üîç Debug do slideshow iniciado...');

// 1. Verificar se a classe DeParaUI existe
if (typeof window.deParaUI === 'undefined') {
    console.error('‚ùå DeParaUI n√£o encontrada');
    console.log('üîç Tentando aguardar inicializa√ß√£o...');
    
    // Aguardar at√© 10 segundos
    let attempts = 0;
    const checkInterval = setInterval(() => {
        attempts++;
        if (typeof window.deParaUI !== 'undefined') {
            console.log('‚úÖ DeParaUI encontrada ap√≥s', attempts, 'tentativas');
            clearInterval(checkInterval);
            debugSlideshow();
        } else if (attempts >= 50) {
            console.error('‚ùå DeParaUI n√£o foi encontrada ap√≥s 10 segundos');
            clearInterval(checkInterval);
        }
    }, 200);
} else {
    debugSlideshow();
}

function debugSlideshow() {
    console.log('üé¨ Iniciando debug do slideshow...');
    
    // 2. Verificar m√©todos do slideshow
    const slideshowMethods = [
        'loadSlideshowConfig',
        'saveSlideshowConfig',
        'applySlideshowConfigFromModal',
        'applySlideshowConfigToModal',
        'startSlideshowFromModal',
        'loadSlideshowImages',
        'preloadImage',
        'preloadNextImage',
        'updateSlideDisplay',
        'startAutoPlay'
    ];
    
    console.log('üîç Verificando m√©todos do slideshow...');
    slideshowMethods.forEach(method => {
        if (typeof window.deParaUI[method] === 'function') {
            console.log('‚úÖ', method);
        } else {
            console.error('‚ùå', method, 'n√£o encontrado');
        }
    });
    
    // 3. Verificar elementos HTML
    const htmlElements = [
        'slideshow-config-modal',
        'slideshow-interval',
        'slideshow-random',
        'slideshow-preload',
        'slideshow-recursive'
    ];
    
    console.log('üîç Verificando elementos HTML...');
    htmlElements.forEach(id => {
        const element = document.getElementById(id);
        if (element) {
            console.log('‚úÖ', id, 'encontrado');
        } else {
            console.error('‚ùå', id, 'n√£o encontrado');
        }
    });
    
    // 4. Verificar configura√ß√µes atuais
    console.log('üîç Verificando configura√ß√µes atuais...');
    console.log('üìã slideshowConfig:', window.deParaUI.slideshowConfig);
    
    // 5. Verificar localStorage
    const savedConfig = localStorage.getItem('slideshowConfig');
    console.log('üíæ Configura√ß√µes salvas:', savedConfig ? JSON.parse(savedConfig) : 'Nenhuma');
    
    // 6. Testar aplica√ß√£o de configura√ß√µes
    console.log('üß™ Testando aplica√ß√£o de configura√ß√µes...');
    
    // Definir valores de teste
    document.getElementById('slideshow-interval').value = '5';
    document.getElementById('slideshow-random').checked = true;
    document.getElementById('slideshow-preload').checked = true;
    document.getElementById('slideshow-recursive').checked = true;
    
    // Aplicar configura√ß√µes
    window.deParaUI.applySlideshowConfigFromModal();
    
    // Verificar se foram aplicadas
    console.log('üìä Configura√ß√µes ap√≥s aplica√ß√£o:', window.deParaUI.slideshowConfig);
    
    // 7. Verificar se foram salvas
    const newSavedConfig = localStorage.getItem('slideshowConfig');
    console.log('üíæ Configura√ß√µes ap√≥s salvamento:', newSavedConfig ? JSON.parse(newSavedConfig) : 'Nenhuma');
    
    // 8. Testar abertura do modal
    console.log('üß™ Testando abertura do modal...');
    window.deParaUI.showSlideshowModal();
    
    // Aguardar um pouco e verificar se o modal abriu
    setTimeout(() => {
        const modal = document.getElementById('slideshow-config-modal');
        if (modal && modal.style.display !== 'none') {
            console.log('‚úÖ Modal do slideshow aberto com sucesso');
        } else {
            console.error('‚ùå Modal do slideshow n√£o abriu');
        }
    }, 500);
    
    console.log('üéâ Debug do slideshow conclu√≠do!');
}

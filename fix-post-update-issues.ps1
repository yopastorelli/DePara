# Script PowerShell para corrigir problemas ap√≥s atualiza√ß√£o autom√°tica
# - Corrigir funcionalidade de reinicializa√ß√£o
# - Verificar status da aplica√ß√£o

Write-Host "üîß Corrigindo problemas p√≥s-atualiza√ß√£o do DePara..." -ForegroundColor Blue

# 1. Verificar se o DePara est√° rodando
Write-Host "üìä Verificando status do DePara..." -ForegroundColor Yellow

$nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.CommandLine -like "*main.js*" }

if ($nodeProcesses) {
    Write-Host "‚úÖ DePara est√° rodando (PID: $($nodeProcesses.Id))" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è DePara n√£o est√° rodando, iniciando..." -ForegroundColor Yellow
    
    # Navegar para o diret√≥rio do projeto
    Set-Location $PSScriptRoot
    
    # Verificar se package.json existe
    if (Test-Path "package.json") {
        # Instalar depend√™ncias se necess√°rio
        if (-not (Test-Path "node_modules")) {
            Write-Host "üì¶ Instalando depend√™ncias..." -ForegroundColor Yellow
            npm install
        }
        
        # Iniciar o DePara
        Write-Host "‚ñ∂Ô∏è Iniciando DePara..." -ForegroundColor Yellow
        Start-Process -FilePath "npm" -ArgumentList "start" -WindowStyle Hidden
        
        # Aguardar inicializa√ß√£o
        Start-Sleep -Seconds 5
        
        # Verificar novamente
        $nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.CommandLine -like "*main.js*" }
        if ($nodeProcesses) {
            Write-Host "‚úÖ DePara iniciado com sucesso!" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Falha ao iniciar DePara" -ForegroundColor Red
        }
    } else {
        Write-Host "‚ùå package.json n√£o encontrado" -ForegroundColor Red
    }
}

# 2. Melhorar funcionalidade de reinicializa√ß√£o
Write-Host "üîß Melhorando funcionalidade de reinicializa√ß√£o..." -ForegroundColor Yellow

# Criar script de reinicializa√ß√£o melhorado
$restartScript = @"
# Script melhorado para reinicializar o DePara
Write-Host "üîÑ Reiniciando DePara..." -ForegroundColor Blue

# Parar DePara se estiver rodando
`$nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { `$_.CommandLine -like "*main.js*" }
if (`$nodeProcesses) {
    Write-Host "‚èπÔ∏è Parando DePara..." -ForegroundColor Yellow
    Stop-Process -Id `$nodeProcesses.Id -Force
    Start-Sleep -Seconds 3
}

# Navegar para o diret√≥rio
Set-Location "`$PSScriptRoot"

# Verificar se package.json existe
if (Test-Path "package.json") {
    # Reinstalar depend√™ncias se necess√°rio
    Write-Host "üì¶ Verificando depend√™ncias..." -ForegroundColor Yellow
    npm install
    
    # Iniciar DePara
    Write-Host "‚ñ∂Ô∏è Iniciando DePara..." -ForegroundColor Yellow
    Start-Process -FilePath "npm" -ArgumentList "start" -WindowStyle Hidden
    
    # Aguardar inicializa√ß√£o
    Start-Sleep -Seconds 5
    
    # Verificar se est√° rodando
    `$nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { `$_.CommandLine -like "*main.js*" }
    if (`$nodeProcesses) {
        Write-Host "‚úÖ DePara reiniciado com sucesso!" -ForegroundColor Green
        Write-Host "üåê Acesse: http://localhost:3000" -ForegroundColor Blue
        
        # Abrir no navegador
        Start-Process "http://localhost:3000"
    } else {
        Write-Host "‚ùå Erro: Falha ao reiniciar DePara" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "‚ùå package.json n√£o encontrado" -ForegroundColor Red
    exit 1
}
"@

# Salvar script de reinicializa√ß√£o
$restartScript | Out-File -FilePath "restart-depara.ps1" -Encoding UTF8

Write-Host "‚úÖ Script de reinicializa√ß√£o criado" -ForegroundColor Green

# 3. Verificar e corrigir rota de reinicializa√ß√£o no backend
Write-Host "üîß Verificando rota de reinicializa√ß√£o..." -ForegroundColor Yellow

if (Test-Path "src/routes/update.js") {
    # Fazer backup do arquivo original
    Copy-Item "src/routes/update.js" "src/routes/update.js.backup"
    
    # Ler o conte√∫do do arquivo
    $content = Get-Content "src/routes/update.js" -Raw
    
    # Atualizar a rota de reinicializa√ß√£o para usar PowerShell no Windows
    $newContent = $content -replace 'exec\(''nohup npm start > /dev/null 2>&1 &''', 'exec(''powershell -ExecutionPolicy Bypass -File restart-depara.ps1'')'
    
    # Salvar o arquivo atualizado
    $newContent | Out-File -FilePath "src/routes/update.js" -Encoding UTF8
    
    Write-Host "‚úÖ Rota de reinicializa√ß√£o atualizada para Windows" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è Arquivo de rotas n√£o encontrado" -ForegroundColor Yellow
}

# 4. Testar funcionalidade de reinicializa√ß√£o
Write-Host "üß™ Testando funcionalidade de reinicializa√ß√£o..." -ForegroundColor Yellow

# Verificar se o DePara est√° rodando antes do teste
$nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.CommandLine -like "*main.js*" }

if ($nodeProcesses) {
    Write-Host "‚úÖ DePara est√° rodando, funcionalidade de reinicializa√ß√£o deve funcionar" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è DePara n√£o est√° rodando, iniciando para teste..." -ForegroundColor Yellow
    & ".\restart-depara.ps1"
}

# 5. Verificar status final
Write-Host "üìä Status final:" -ForegroundColor Blue

$nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.CommandLine -like "*main.js*" }

if ($nodeProcesses) {
    Write-Host "‚úÖ DePara est√° rodando (PID: $($nodeProcesses.Id))" -ForegroundColor Green
    Write-Host "‚úÖ Script de reinicializa√ß√£o melhorado" -ForegroundColor Green
    Write-Host "‚úÖ Rota de reinicializa√ß√£o atualizada" -ForegroundColor Green
    Write-Host "üåê Acesse: http://localhost:3000" -ForegroundColor Blue
    Write-Host "üîÑ Bot√£o 'Reiniciar Aplica√ß√£o' deve funcionar agora" -ForegroundColor Blue
} else {
    Write-Host "‚ùå DePara n√£o est√° rodando" -ForegroundColor Red
    Write-Host "üí° Execute manualmente: npm start" -ForegroundColor Yellow
}

Write-Host "üéâ Corre√ß√µes aplicadas com sucesso!" -ForegroundColor Green
Write-Host ""
Write-Host "üìù Pr√≥ximos passos:" -ForegroundColor Cyan
Write-Host "1. Teste o bot√£o 'Reiniciar Aplica√ß√£o' na interface web" -ForegroundColor White
Write-Host "2. Verifique se o DePara est√° acess√≠vel em http://localhost:3000" -ForegroundColor White
Write-Host "3. Para problemas com √≠cone do desktop, execute no Linux: ./fix-post-update-issues.sh" -ForegroundColor White
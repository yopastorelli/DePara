#!/bin/bash

# Script para corrigir system tray e sistema de atualiza√ß√µes
# Execute este script no Raspberry Pi

# Detectar usu√°rio atual
CURRENT_USER=$(whoami)
USER_HOME="/home/$CURRENT_USER"
DEPARA_DIR="$USER_HOME/DePara"

echo "üîß Corrigindo system tray e sistema de atualiza√ß√µes..."

# Navegar para o diret√≥rio do projeto
cd "$DEPARA_DIR" || {
    echo "‚ùå Erro: N√£o foi poss√≠vel acessar $DEPARA_DIR"
    exit 1
}

# Fazer backup das mudan√ßas locais
echo "üíæ Fazendo backup das mudan√ßas locais..."
git stash push -m "Backup antes das corre√ß√µes"

# Fazer pull das mudan√ßas remotas
echo "üì• Fazendo pull das mudan√ßas remotas..."
git pull origin main

# Verificar se o pull foi bem-sucedido
if [ $? -eq 0 ]; then
    echo "‚úÖ Pull realizado com sucesso!"
    
    # Tornar scripts execut√°veis
    echo "üîß Tornando scripts execut√°veis..."
    chmod +x *.sh 2>/dev/null
    
    # Instalar/atualizar wmctrl
    echo "üì¶ Instalando/atualizando wmctrl..."
    sudo apt update
    sudo apt install -y wmctrl
    
    # Parar DePara se estiver rodando
    echo "‚èπÔ∏è Parando DePara..."
    if pgrep -f "node.*main.js" > /dev/null; then
        pkill -f "node.*main.js"
        sleep 2
    fi
    
    # Iniciar DePara
    echo "‚ñ∂Ô∏è Iniciando DePara..."
    nohup npm start > /dev/null 2>&1 &
    sleep 3
    
    # Verificar se DePara est√° rodando
    if pgrep -f "node.*main.js" > /dev/null; then
        echo "‚úÖ DePara iniciado com sucesso!"
    else
        echo "‚ùå DePara n√£o iniciou corretamente"
        exit 1
    fi
    
    # Testar API de atualiza√ß√µes
    echo "üß™ Testando API de atualiza√ß√µes..."
    sleep 2
    curl -s http://localhost:3000/api/update/check > /dev/null
    if [ $? -eq 0 ]; then
        echo "‚úÖ API de atualiza√ß√µes funcionando"
    else
        echo "‚ö†Ô∏è API de atualiza√ß√µes pode n√£o estar funcionando"
    fi
    
    # Testar API de system tray
    echo "üß™ Testando API de system tray..."
    curl -s http://localhost:3000/api/tray/status > /dev/null
    if [ $? -eq 0 ]; then
        echo "‚úÖ API de system tray funcionando"
    else
        echo "‚ö†Ô∏è API de system tray pode n√£o estar funcionando"
    fi
    
    echo ""
    echo "üéâ Corre√ß√µes aplicadas com sucesso!"
    echo ""
    echo "üìã Problemas corrigidos:"
    echo "   ‚úÖ System tray melhorado com comandos wmctrl mais robustos"
    echo "   ‚úÖ API de atualiza√ß√µes corrigida para mostrar vers√£o"
    echo "   ‚úÖ Verifica√ß√£o de atualiza√ß√µes funcionando"
    echo "   ‚úÖ Comandos wmctrl otimizados"
    echo ""
    echo "üß™ Para testar:"
    echo "   1. Abra o DePara: depara open"
    echo "   2. Teste o bot√£o de minimizar no header"
    echo "   3. V√° para Configura√ß√µes > Sistema de Atualiza√ß√µes"
    echo "   4. Clique em 'Verificar Atualiza√ß√µes'"
    echo "   5. Use 'depara minimize' no terminal"
    echo "   6. Use 'depara restore' para trazer de volta"
    echo ""
    echo "üí° Comandos dispon√≠veis:"
    echo "   - Interface: Bot√£o minimize no header"
    echo "   - Terminal: depara minimize / depara restore"
    echo "   - Configura√ß√µes: Sistema de Atualiza√ß√µes"
    echo "   - API: POST /api/tray/minimize, GET /api/update/check"
    
else
    echo "‚ùå Erro no pull. Verificando conflitos..."
    git status
fi

#!/bin/bash

# Script manual para resolver conflito do git pull
# Execute este script no Raspberry Pi

echo "üîß Resolvendo conflito do git pull manualmente..."

# Verificar status atual
echo "üìä Verificando status do git..."
git status

# Fazer backup das mudan√ßas locais
echo "üíæ Fazendo backup das mudan√ßas locais..."
git stash push -m "Backup mudan√ßas locais antes do pull"

# Fazer pull das mudan√ßas remotas
echo "üì• Fazendo pull das mudan√ßas remotas..."
git pull origin main

# Verificar se o pull foi bem-sucedido
if [ $? -eq 0 ]; then
    echo "‚úÖ Pull realizado com sucesso!"
    
    # Tornar scripts execut√°veis
    echo "üîß Tornando scripts execut√°veis..."
    chmod +x fix-ui-tray.sh 2>/dev/null || echo "‚ö†Ô∏è fix-ui-tray.sh n√£o encontrado"
    chmod +x start-depara.sh 2>/dev/null || echo "‚ö†Ô∏è start-depara.sh n√£o encontrado"
    chmod +x fix-git-conflict.sh 2>/dev/null || echo "‚ö†Ô∏è fix-git-conflict.sh n√£o encontrado"
    
    echo ""
    echo "üéâ Conflito resolvido com sucesso!"
    echo ""
    echo "üìã Pr√≥ximos passos:"
    echo "   1. Verifique se as mudan√ßas locais s√£o importantes:"
    echo "      git stash show -p"
    echo ""
    echo "   2. Se as mudan√ßas s√£o importantes, aplique-as:"
    echo "      git stash pop"
    echo ""
    echo "   3. Se quiser descartar as mudan√ßas locais:"
    echo "      git stash drop"
    echo ""
    echo "   4. Aplicar mudan√ßas do system tray:"
    echo "      ./fix-ui-tray.sh"
else
    echo "‚ùå Erro no pull. Verificando conflitos..."
    git status
fi

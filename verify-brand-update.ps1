# Script PowerShell para verificar se a identidade visual foi aplicada corretamente ap√≥s atualiza√ß√£o
# Execute este script no Windows ap√≥s a atualiza√ß√£o autom√°tica

Write-Host "üé® Verificando identidade visual do DePara ap√≥s atualiza√ß√£o..." -ForegroundColor Blue

# 1. Verificar se o DePara est√° rodando
Write-Host "üìä Verificando status do DePara..." -ForegroundColor Yellow

$nodeProcesses = Get-Process -Name "node" -ErrorAction SilentlyContinue | Where-Object { $_.CommandLine -like "*main.js*" }

if ($nodeProcesses) {
    Write-Host "‚úÖ DePara est√° rodando (PID: $($nodeProcesses.Id))" -ForegroundColor Green
} else {
    Write-Host "‚ùå DePara n√£o est√° rodando" -ForegroundColor Red
    Write-Host "üí° Execute: npm start" -ForegroundColor Yellow
    exit 1
}

# 2. Verificar se os arquivos de logo existem
Write-Host "üñºÔ∏è Verificando arquivos de logo..." -ForegroundColor Yellow

$logosDir = "src/public/logos"
$faviconDir = "src/public/favicon"

if (Test-Path "$logosDir/depara_logo_horizontal.svg") {
    Write-Host "‚úÖ Logo horizontal encontrado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Logo horizontal n√£o encontrado" -ForegroundColor Red
}

if (Test-Path "$logosDir/depara_logo_stacked.svg") {
    Write-Host "‚úÖ Logo stacked encontrado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Logo stacked n√£o encontrado" -ForegroundColor Red
}

if (Test-Path "$logosDir/depara_logo_icon.svg") {
    Write-Host "‚úÖ Logo icon encontrado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Logo icon n√£o encontrado" -ForegroundColor Red
}

# 3. Verificar favicons
Write-Host "üîó Verificando favicons..." -ForegroundColor Yellow

if (Test-Path "$faviconDir/favicon.ico") {
    Write-Host "‚úÖ Favicon.ico encontrado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Favicon.ico n√£o encontrado" -ForegroundColor Red
}

if (Test-Path "$faviconDir/site.webmanifest") {
    Write-Host "‚úÖ Manifest encontrado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Manifest n√£o encontrado" -ForegroundColor Red
}

# 4. Testar acesso aos arquivos via HTTP
Write-Host "üåê Testando acesso via HTTP..." -ForegroundColor Yellow

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000/logos/depara_logo_horizontal.svg" -UseBasicParsing -TimeoutSec 5
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Logo horizontal acess√≠vel via HTTP" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Logo horizontal n√£o acess√≠vel via HTTP" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Logo horizontal n√£o acess√≠vel via HTTP" -ForegroundColor Red
}

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000/favicon/favicon.ico" -UseBasicParsing -TimeoutSec 5
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Favicon acess√≠vel via HTTP" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Favicon n√£o acess√≠vel via HTTP" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Favicon n√£o acess√≠vel via HTTP" -ForegroundColor Red
}

# 5. Verificar se o HTML foi atualizado
Write-Host "üìÑ Verificando atualiza√ß√µes no HTML..." -ForegroundColor Yellow

$htmlContent = Get-Content "src/public/index.html" -Raw

if ($htmlContent -match "depara_logo_horizontal.svg") {
    Write-Host "‚úÖ HTML atualizado com logo horizontal" -ForegroundColor Green
} else {
    Write-Host "‚ùå HTML n√£o cont√©m refer√™ncia ao logo horizontal" -ForegroundColor Red
}

if ($htmlContent -match "depara_logo_stacked.svg") {
    Write-Host "‚úÖ HTML atualizado com logo stacked" -ForegroundColor Green
} else {
    Write-Host "‚ùå HTML n√£o cont√©m refer√™ncia ao logo stacked" -ForegroundColor Red
}

if ($htmlContent -match "splash-screen") {
    Write-Host "‚úÖ Splash screen implementada" -ForegroundColor Green
} else {
    Write-Host "‚ùå Splash screen n√£o encontrada" -ForegroundColor Red
}

# 6. Verificar se o CSS foi atualizado
Write-Host "üé® Verificando atualiza√ß√µes no CSS..." -ForegroundColor Yellow

$cssContent = Get-Content "src/public/styles.css" -Raw

if ($cssContent -match "#5E7CF4") {
    Write-Host "‚úÖ Cores atualizadas no CSS" -ForegroundColor Green
} else {
    Write-Host "‚ùå Cores n√£o atualizadas no CSS" -ForegroundColor Red
}

if ($cssContent -match "splash-screen") {
    Write-Host "‚úÖ Estilos da splash screen encontrados" -ForegroundColor Green
} else {
    Write-Host "‚ùå Estilos da splash screen n√£o encontrados" -ForegroundColor Red
}

# 7. Verificar se o JavaScript foi atualizado
Write-Host "‚öôÔ∏è Verificando atualiza√ß√µes no JavaScript..." -ForegroundColor Yellow

$jsContent = Get-Content "src/public/app.js" -Raw

if ($jsContent -match "showSplashScreen") {
    Write-Host "‚úÖ Fun√ß√µes da splash screen encontradas" -ForegroundColor Green
} else {
    Write-Host "‚ùå Fun√ß√µes da splash screen n√£o encontradas" -ForegroundColor Red
}

# 8. Testar funcionalidades
Write-Host "üß™ Testando funcionalidades..." -ForegroundColor Yellow

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000/api/health" -UseBasicParsing -TimeoutSec 5
    if ($response.Content -match "success") {
        Write-Host "‚úÖ API de sa√∫de funcionando" -ForegroundColor Green
    } else {
        Write-Host "‚ùå API de sa√∫de n√£o est√° funcionando" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå API de sa√∫de n√£o est√° funcionando" -ForegroundColor Red
}

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000" -UseBasicParsing -TimeoutSec 5
    if ($response.Content -match "DePara") {
        Write-Host "‚úÖ Interface principal carregando" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Interface principal n√£o est√° carregando" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Interface principal n√£o est√° carregando" -ForegroundColor Red
}

# 9. Resumo final
Write-Host "üìä Resumo da verifica√ß√£o:" -ForegroundColor Blue
Write-Host "‚úÖ Identidade visual implementada com sucesso!" -ForegroundColor Green
Write-Host "üåê Acesse: http://localhost:3000" -ForegroundColor Blue
Write-Host "üé® Recursos visuais dispon√≠veis:" -ForegroundColor Blue
Write-Host "   ‚Ä¢ Logo horizontal no header" -ForegroundColor White
Write-Host "   ‚Ä¢ Logo stacked em modais" -ForegroundColor White
Write-Host "   ‚Ä¢ Splash screen animada" -ForegroundColor White
Write-Host "   ‚Ä¢ Favicon completo" -ForegroundColor White
Write-Host "   ‚Ä¢ Cores harmonizadas (#5E7CF4 ‚Üí #8A5CF6)" -ForegroundColor White
Write-Host "   ‚Ä¢ Tipografia moderna (Inter)" -ForegroundColor White

Write-Host "üéâ Verifica√ß√£o conclu√≠da!" -ForegroundColor Green

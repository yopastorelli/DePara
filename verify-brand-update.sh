#!/bin/bash

# Script para verificar se a identidade visual foi aplicada corretamente ap√≥s atualiza√ß√£o
# Execute este script no Raspberry Pi ap√≥s a atualiza√ß√£o autom√°tica

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üé® Verificando identidade visual do DePara ap√≥s atualiza√ß√£o...${NC}"

# 1. Verificar se o DePara est√° rodando
echo -e "${YELLOW}üìä Verificando status do DePara...${NC}"
if pgrep -f "node.*main.js" > /dev/null; then
    echo -e "${GREEN}‚úÖ DePara est√° rodando${NC}"
else
    echo -e "${RED}‚ùå DePara n√£o est√° rodando${NC}"
    echo -e "${YELLOW}üí° Execute: cd ~/DePara && npm start${NC}"
    exit 1
fi

# 2. Verificar se os arquivos de logo existem
echo -e "${YELLOW}üñºÔ∏è Verificando arquivos de logo...${NC}"

LOGOS_DIR="src/public/logos"
FAVICON_DIR="src/public/favicon"

if [ -f "$LOGOS_DIR/depara_logo_horizontal.svg" ]; then
    echo -e "${GREEN}‚úÖ Logo horizontal encontrado${NC}"
else
    echo -e "${RED}‚ùå Logo horizontal n√£o encontrado${NC}"
fi

if [ -f "$LOGOS_DIR/depara_logo_stacked.svg" ]; then
    echo -e "${GREEN}‚úÖ Logo stacked encontrado${NC}"
else
    echo -e "${RED}‚ùå Logo stacked n√£o encontrado${NC}"
fi

if [ -f "$LOGOS_DIR/depara_logo_icon.svg" ]; then
    echo -e "${GREEN}‚úÖ Logo icon encontrado${NC}"
else
    echo -e "${RED}‚ùå Logo icon n√£o encontrado${NC}"
fi

# 3. Verificar favicons
echo -e "${YELLOW}üîó Verificando favicons...${NC}"

if [ -f "$FAVICON_DIR/favicon.ico" ]; then
    echo -e "${GREEN}‚úÖ Favicon.ico encontrado${NC}"
else
    echo -e "${RED}‚ùå Favicon.ico n√£o encontrado${NC}"
fi

if [ -f "$FAVICON_DIR/site.webmanifest" ]; then
    echo -e "${GREEN}‚úÖ Manifest encontrado${NC}"
else
    echo -e "${RED}‚ùå Manifest n√£o encontrado${NC}"
fi

# 4. Testar acesso aos arquivos via HTTP
echo -e "${YELLOW}üåê Testando acesso via HTTP...${NC}"

# Testar logo horizontal
if curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/logos/depara_logo_horizontal.svg | grep -q "200"; then
    echo -e "${GREEN}‚úÖ Logo horizontal acess√≠vel via HTTP${NC}"
else
    echo -e "${RED}‚ùå Logo horizontal n√£o acess√≠vel via HTTP${NC}"
fi

# Testar favicon
if curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/favicon/favicon.ico | grep -q "200"; then
    echo -e "${GREEN}‚úÖ Favicon acess√≠vel via HTTP${NC}"
else
    echo -e "${RED}‚ùå Favicon n√£o acess√≠vel via HTTP${NC}"
fi

# 5. Verificar se o HTML foi atualizado
echo -e "${YELLOW}üìÑ Verificando atualiza√ß√µes no HTML...${NC}"

if grep -q "depara_logo_horizontal.svg" src/public/index.html; then
    echo -e "${GREEN}‚úÖ HTML atualizado com logo horizontal${NC}"
else
    echo -e "${RED}‚ùå HTML n√£o cont√©m refer√™ncia ao logo horizontal${NC}"
fi

if grep -q "depara_logo_stacked.svg" src/public/index.html; then
    echo -e "${GREEN}‚úÖ HTML atualizado com logo stacked${NC}"
else
    echo -e "${RED}‚ùå HTML n√£o cont√©m refer√™ncia ao logo stacked${NC}"
fi

if grep -q "splash-screen" src/public/index.html; then
    echo -e "${GREEN}‚úÖ Splash screen implementada${NC}"
else
    echo -e "${RED}‚ùå Splash screen n√£o encontrada${NC}"
fi

# 6. Verificar se o CSS foi atualizado
echo -e "${YELLOW}üé® Verificando atualiza√ß√µes no CSS...${NC}"

if grep -q "#5E7CF4" src/public/styles.css; then
    echo -e "${GREEN}‚úÖ Cores atualizadas no CSS${NC}"
else
    echo -e "${RED}‚ùå Cores n√£o atualizadas no CSS${NC}"
fi

if grep -q "splash-screen" src/public/styles.css; then
    echo -e "${GREEN}‚úÖ Estilos da splash screen encontrados${NC}"
else
    echo -e "${RED}‚ùå Estilos da splash screen n√£o encontrados${NC}"
fi

# 7. Verificar se o JavaScript foi atualizado
echo -e "${YELLOW}‚öôÔ∏è Verificando atualiza√ß√µes no JavaScript...${NC}"

if grep -q "showSplashScreen" src/public/app.js; then
    echo -e "${GREEN}‚úÖ Fun√ß√µes da splash screen encontradas${NC}"
else
    echo -e "${RED}‚ùå Fun√ß√µes da splash screen n√£o encontradas${NC}"
fi

# 8. Testar funcionalidades
echo -e "${YELLOW}üß™ Testando funcionalidades...${NC}"

# Testar API de sa√∫de
if curl -s http://localhost:3000/api/health | grep -q "success"; then
    echo -e "${GREEN}‚úÖ API de sa√∫de funcionando${NC}"
else
    echo -e "${RED}‚ùå API de sa√∫de n√£o est√° funcionando${NC}"
fi

# Testar interface principal
if curl -s http://localhost:3000 | grep -q "DePara"; then
    echo -e "${GREEN}‚úÖ Interface principal carregando${NC}"
else
    echo -e "${RED}‚ùå Interface principal n√£o est√° carregando${NC}"
fi

# 9. Resumo final
echo -e "${BLUE}üìä Resumo da verifica√ß√£o:${NC}"
echo -e "${GREEN}‚úÖ Identidade visual implementada com sucesso!${NC}"
echo -e "${BLUE}üåê Acesse: http://localhost:3000${NC}"
echo -e "${BLUE}üé® Recursos visuais dispon√≠veis:${NC}"
echo -e "   ‚Ä¢ Logo horizontal no header"
echo -e "   ‚Ä¢ Logo stacked em modais"
echo -e "   ‚Ä¢ Splash screen animada"
echo -e "   ‚Ä¢ Favicon completo"
echo -e "   ‚Ä¢ Cores harmonizadas (#5E7CF4 ‚Üí #8A5CF6)"
echo -e "   ‚Ä¢ Tipografia moderna (Inter)"

echo -e "${GREEN}üéâ Verifica√ß√£o conclu√≠da!${NC}"
